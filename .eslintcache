[{"C:\\Users\\Chingis\\Documents\\Web Apps\\FrontEnd\\sun-position\\src\\reportWebVitals.js":"1","C:\\Users\\Chingis\\Documents\\Web Apps\\FrontEnd\\sun-position\\src\\App.js":"2","C:\\Users\\Chingis\\Documents\\Web Apps\\FrontEnd\\sun-position\\src\\index.js":"3","C:\\Users\\Chingis\\Documents\\Web Apps\\FrontEnd\\sun-position\\src\\utils\\sun_position.js":"4"},{"size":362,"mtime":1606124688192,"results":"5","hashOfConfig":"6"},{"size":4945,"mtime":1606979359879,"results":"7","hashOfConfig":"6"},{"size":500,"mtime":1606124688192,"results":"8","hashOfConfig":"6"},{"size":1712,"mtime":1606906606530,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"a4yllj",{"filePath":"12","messages":"13","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Chingis\\Documents\\Web Apps\\FrontEnd\\sun-position\\src\\reportWebVitals.js",[],"C:\\Users\\Chingis\\Documents\\Web Apps\\FrontEnd\\sun-position\\src\\App.js",["19","20","21"],"import \"./App.css\";\nimport { useState, useRef } from \"react\";\nimport DateFnsUtils from \"@date-io/date-fns\"; // choose your lib\nimport {\n  DatePicker,\n  TimePicker,\n  MuiPickersUtilsProvider,\n} from \"@material-ui/pickers\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Slider from \"@material-ui/core/Slider\";\nimport { createStore } from \"redux\";\nimport { Provider, useDispatch, useSelector } from \"react-redux\";\nimport useInterval from \"@use-it/interval\";\n\nimport getPosition from \"./utils/sun_position\";\n// import { colors } from \"material-ui/styles\";\n\n//default value\nconst initialState = {};\n\n//reducers\nconst rootReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case action.type === \"\":\n      return 0;\n    default:\n      return state;\n  }\n};\n\n//store\nconst store = createStore(rootReducer, initialState);\n\nconst useStyles = makeStyles({\n  root: {\n    width: 300,\n  },\n});\n\nfunction valuetext(value) {\n  return `${value}`;\n}\n\nfunction Clock() {\n  const [currentTime, setCurrentTime] = useState(new Date());\n\n  useInterval(() => {\n    setCurrentTime(new Date());\n  }, 1000);\n  return <div className=\"date\">{currentTime.toLocaleTimeString(\"ru-RU\")}</div>;\n}\n\n\n\nfunction App() {\n  const [selectedDate, handleDateChange] = useState(new Date());\n\n  const initial_longitude = 107.6;\n  const initial_latitude = 51.84;\n  const [coordinates, setCoordinates] = useState({\n    latitude: initial_latitude,\n    longitude: initial_longitude,\n  });\n  // const date = new Date();\n  const { azimuth, altitude } = getPosition(\n    selectedDate,\n    coordinates.latitude,\n    coordinates.longitude\n  );\n  // var position = SunCalc.getPosition(new Date(), 51, 107);\n  const azimuth_to_degrees = (rad) => {\n    const degree = rad * (180 / Math.PI);\n    return degree + 180;\n  };\n  const altitude_to_degrees = (rad) => {\n    const degree = rad * (180 / Math.PI);\n    return degree;\n  };\n  const azimuth_deg = azimuth_to_degrees(azimuth);\n  const altitude_deg = altitude_to_degrees(altitude);\n\n  const night_color = \"#5e81ac\";\n  const golden_hours_color = \"#f08c00\";\n  const twilight_color = \"#9775fa\";\n  const daylight_color = \"#228be6\";\n\n  const color = (sun_altitude) => {\n    if (sun_altitude >= 10) {\n      return daylight_color;\n    } else if (sun_altitude < 10 && sun_altitude >= 0) {\n      return golden_hours_color;\n    } else if (sun_altitude < 0 && sun_altitude >= -10) {\n      return twilight_color;\n    } else if (sun_altitude < -10) {\n      return night_color;\n    }\n  };\n\n  const classes = useStyles();\n\n  return (\n    <Provider store={store}>\n      <div className=\"App\">\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\n          <DatePicker value={selectedDate} onChange={handleDateChange} />\n          <TimePicker value={selectedDate} onChange={handleDateChange} />\n        </MuiPickersUtilsProvider>\n\n        <Clock />\n\n        <div className=\"azimuth\">\n          Azimuth: {azimuth_deg.toFixed(2)}\n          <sup>o</sup>\n        </div>\n\n        <div className=\"altitude\">\n          Altitude: {altitude_deg.toFixed(2)}\n          <sup>o</sup>\n        </div>\n        {/* <div className=\"altitude\">{position.altitude}</div> */}\n        <div\n          className=\"container\"\n          style={{ transform: `rotateZ(${azimuth_deg}deg)` }}\n        >\n          <div\n            className=\"marker\"\n            style={{ border: `${color(altitude_deg)} solid 3px` }}\n          ></div>\n        </div>\n        <div\n          className=\"container\"\n          style={{ transform: `rotateZ(${-altitude_deg + 90}deg)` }}\n        >\n          <div\n            className=\"marker\"\n            style={{ border: `${color(altitude_deg)} solid 3px` }}\n          ></div>\n        </div>\n        <div className={classes.root}>\n          <Typography id=\"discrete-slider\" gutterBottom>\n            Latitude\n          </Typography>\n          {/* <span>date.</span> */}\n          <Slider\n            // defaultValue={2020}\n            getAriaValueText={valuetext}\n            aria-labelledby=\"discrete-slider\"\n            valueLabelDisplay=\"auto\"\n            value={coordinates.latitude}\n            onChange={(e, value) =>\n              setCoordinates({ ...coordinates, latitude: value })\n            }\n            marks={false}\n            min={-90}\n            max={90}\n          />\n          <Typography id=\"discrete-slider\" gutterBottom>\n            Longitude\n          </Typography>\n          <Slider\n            // defaultValue={1}\n            getAriaValueText={valuetext}\n            aria-labelledby=\"discrete-slider\"\n            valueLabelDisplay=\"auto\"\n            value={coordinates.longitude}\n            onChange={(e, value) =>\n              setCoordinates({ ...coordinates, longitude: value })\n            }\n            marks={false}\n            min={-180}\n            max={180}\n          />\n        </div>\n      </div>\n    </Provider>\n  );\n}\n\nexport default App;\n","C:\\Users\\Chingis\\Documents\\Web Apps\\FrontEnd\\sun-position\\src\\index.js",[],"C:\\Users\\Chingis\\Documents\\Web Apps\\FrontEnd\\sun-position\\src\\utils\\sun_position.js",[],{"ruleId":"22","severity":1,"message":"23","line":2,"column":20,"nodeType":"24","messageId":"25","endLine":2,"endColumn":26},{"ruleId":"22","severity":1,"message":"26","line":13,"column":20,"nodeType":"24","messageId":"25","endLine":13,"endColumn":31},{"ruleId":"22","severity":1,"message":"27","line":13,"column":33,"nodeType":"24","messageId":"25","endLine":13,"endColumn":44},"no-unused-vars","'useRef' is defined but never used.","Identifier","unusedVar","'useDispatch' is defined but never used.","'useSelector' is defined but never used."]